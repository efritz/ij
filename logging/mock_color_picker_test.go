// Code generated by github.com/efritz/go-mockgen 0.1.0; DO NOT EDIT.
// This file was generated by robots at
// 2019-05-24T15:46:01-05:00
// using the command
// $ go-mockgen -f github.com/efritz/ij/logging -i ColorPicker -o mock_color_picker_test.go

package logging

// MockColorPicker is a mock impelementation of the ColorPicker interface
// (from the package github.com/efritz/ij/logging) used for unit testing.
type MockColorPicker struct {
	// ColorizeFunc is an instance of a mock function object controlling the
	// behavior of the method Colorize.
	ColorizeFunc *ColorPickerColorizeFunc
}

// NewMockColorPicker creates a new mock of the ColorPicker interface. All
// methods return zero values for all results, unless overwritten.
func NewMockColorPicker() *MockColorPicker {
	return &MockColorPicker{
		ColorizeFunc: &ColorPickerColorizeFunc{
			defaultHook: func(string) string {
				return ""
			},
		},
	}
}

// NewMockColorPickerFrom creates a new mock of the MockColorPicker
// interface. All methods delegate to the given implementation, unless
// overwritten.
func NewMockColorPickerFrom(i ColorPicker) *MockColorPicker {
	return &MockColorPicker{
		ColorizeFunc: &ColorPickerColorizeFunc{
			defaultHook: i.Colorize,
		},
	}
}

// ColorPickerColorizeFunc describes the behavior when the Colorize method
// of the parent MockColorPicker instance is invoked.
type ColorPickerColorizeFunc struct {
	defaultHook func(string) string
	hooks       []func(string) string
	history     []ColorPickerColorizeFuncCall
}

// Colorize delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockColorPicker) Colorize(v0 string) string {
	r0 := m.ColorizeFunc.nextHook()(v0)
	m.ColorizeFunc.history = append(m.ColorizeFunc.history, ColorPickerColorizeFuncCall{v0, r0})
	return r0
}

// SetDefaultHook sets function that is called when the Colorize method of
// the parent MockColorPicker instance is invoked and the hook queue is
// empty.
func (f *ColorPickerColorizeFunc) SetDefaultHook(hook func(string) string) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// Colorize method of the parent MockColorPicker instance inovkes the hook
// at the front of the queue and discards it. After the queue is empty, the
// default hook function is invoked for any future action.
func (f *ColorPickerColorizeFunc) PushHook(hook func(string) string) {
	f.hooks = append(f.hooks, hook)
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *ColorPickerColorizeFunc) SetDefaultReturn(r0 string) {
	f.SetDefaultHook(func(string) string {
		return r0
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *ColorPickerColorizeFunc) PushReturn(r0 string) {
	f.PushHook(func(string) string {
		return r0
	})
}

func (f *ColorPickerColorizeFunc) nextHook() func(string) string {
	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

// History returns a sequence of ColorPickerColorizeFuncCall objects
// describing the invocations of this function.
func (f *ColorPickerColorizeFunc) History() []ColorPickerColorizeFuncCall {
	return f.history
}

// ColorPickerColorizeFuncCall is an object that describes an invocation of
// method Colorize on an instance of MockColorPicker.
type ColorPickerColorizeFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 string
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 string
}

// Args returns an interface slice containing the arguments of this
// invocation.
func (c ColorPickerColorizeFuncCall) Args() []interface{} {
	return []interface{}{c.Arg0}
}

// Results returns an interface slice containing the results of this
// invocation.
func (c ColorPickerColorizeFuncCall) Results() []interface{} {
	return []interface{}{c.Result0}
}
